     H NoMain Option(*SrcStmt)


      //----------------------------------------------------------------------
      //   Exported Procedures
      //----------------------------------------------------------------------

      /copy RPGUNITY1,JOBLOG


      //----------------------------------------------------------------------
      //   Imported Procedures
      //----------------------------------------------------------------------

      /copy RPGUNIT1,TESTCASE
      /copy RPGUNITY1,ERRORCODE
      /copy RPGUNITY1,OPNLIST
      /copy RPGUNITY1,QGYOLJBL
      /copy RPGUNITY1,TEMPLATES


      //----------------------------------------------------------------------
      //   Private Procedures
      //----------------------------------------------------------------------


      //----------------------------------------------------------------------
      //   Procedure Definitions
      //----------------------------------------------------------------------

     P assertJobLogContains...
     P                 b                   Export
     D assertJobLogContains...
     D                 pi
     D  msgId                         7a   Const
     D  timeLimit                      z   Const

       // Job log message field selection for QGYOLJBL API.
     D fldSelect       ds                  Qualified
     D  listDirection                10a   Inz('*PRV')
     D  qlfJobNm                     26a   Inz('*')
     D  intJobId                     16a   Inz(*blank)
     D  startMsgKey                   4a   Inz(x'FFFFFFFF')
     D  maxMsgLen                    10i 0 Inz(0)
     D  maxMsgHlpLen                 10i 0 Inz(0)
     D  fldIdOff                     10i 0
     D  fldCnt                       10i 0 Inz(1)
     D  callMsgqNmOff                10i 0
     D  callMsgqNmLen                10i 0 Inz(%size(fldSelect.callMsgqNm))
     D  fldId1                       10i 0 Inz(OLJL_SND_PGM_NM)
     D  callMsgqNm                    1a   Inz('*')

     D listInfo        ds                  LikeDs(dsOpnList)
     D msgBasicInfo    ds                  LikeDs(dsOLJL0100EntHdr)
     D                                     Based(p_msgBasicInfo)
     D p_msgBasicInfo  s               *
     D jobLogListEnt   s          32766a
     D sentDateAsIso   s              8a
     D sentTimeStamp   s               z
     D msgIdx          s             10i 0

      /free

        fldSelect.fldIdOff = %addr(fldSelect.fldId1)     - %addr(fldSelect);
        fldSelect.callMsgqNmOff =
                             %addr(fldSelect.callMsgqNm) - %addr(fldSelect);

        QGYOLJBL( jobLogListEnt :
                  %size(jobLogListEnt) :
                  listInfo :
                  10 : // records to return (TODO)
                  fldSelect :
                  %size( fldSelect ) :
                  percolateErrors );

        p_msgBasicInfo = %addr( jobLogListEnt );
        msgIdx = 1;

        dow msgIdx < listInfo.retRcdCnt;

          // Check time limit. TODO: encapsulate.

          sentDateAsIso = %char( %date( msgBasicInfo.sentDate : *cymd0) :
                                 *iso0 );
          sentTimeStamp = %timestamp( sentDateAsIso +
                                      msgBasicInfo.sentTime +
                                      msgBasicInfo.microseconds :
                                      *iso0 );

          if (msgBasicInfo.msgId = msgId)
                  and (sentTimeStamp >= timeLimit);
            return;
          endif;

          // Go to next message in the job log.
          p_msgBasicInfo = %addr( jobLogListEnt ) + msgBasicInfo.nextEntOff;
          msgIdx += 1;
        enddo;

        fail( 'Message ' + msgId + ' not found in the job log.' );

      /end-free
     P                 e


     P getFullTimeStamp...
     P                 b                   Export
     D getFullTimeStamp...
     D                 pi              z

     D now             s               z

     C/EXEC SQL Set :now = Current_TimeStamp
     C/END-EXEC
      /free

        return now;

      /end-free
     P                 e

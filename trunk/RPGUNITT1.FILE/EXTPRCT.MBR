      //
      // Tests EXTPRC.
      //

     H NoMain Option(*SrcStmt)


       //----------------------------------------------------------------------
       //   Imported Procedures
       //----------------------------------------------------------------------

      /copy RPGUNITY1,EXTPRC
      /copy RPGUNITY1,TEMPLATES
      /copy RPGUNIT1,TESTCASE


       //----------------------------------------------------------------------
       //   Test Prototypes
       //----------------------------------------------------------------------

     DtestOneProc      pr
     DtestSeveralProc  pr
     DtestProcNmList   pr
     DtestSrvPgmNotFound...
     D                 pr
     DsetUpSuite       pr
     DtearDownSuite    pr


       //----------------------------------------------------------------------
       //   Private Procedure Prototypes
       //----------------------------------------------------------------------

       // The next three procedures are used to invoke the ProcPtr in ProcNmList_t.

     D cnt             pr            10i 0 ExtProc(cnt_p)
     D  privateData                    *   Const

     D getNm           pr                  ExtProc(getNm_p)
     D                                     Like(ProcNm_t)
     D  privateData                    *   Const

     D goToNext        pr                  ExtProc(goToNext_p)
     D  privateData                    *   Const


       //----------------------------------------------------------------------
       //   Global Variables
       //----------------------------------------------------------------------

       // The next three pointers are used to invoke the procedures in ProcNmList_t.
     D cnt_p           s               *   ProcPtr
     D getNm_p         s               *   ProcPtr
     D goToNext_p      s               *   ProcPtr


       //----------------------------------------------------------------------
       //   Procedures Definition
       //----------------------------------------------------------------------

     PtestOneProc      b                   Export
     DtestOneProc      pi

     D procList        ds                  LikeDs(ProcList_t)
     D procCnt         s             10i 0
     D procNm          s                   Like(ProcNm_t)

      /free

        procList = loadProcList( 'SRVPGM1' );
        procCnt = cntProc( procList );

        iEqual( 1: procCnt );

        procNm = getProcNm( procList );

        aEqual( 'PROC1': procNm );

      /end-free
     PtestOneProc      e


     PtestSeveralProc  b                   Export
     DtestSeveralProc  pi

     D procList        ds                  LikeDs(ProcList_t)
     D procCnt         s             10i 0
     D procNm          s                   Like(ProcNm_t)

      /free

        procList = loadProcList( 'SRVPGM2' );
        procCnt = cntProc( procList );

        iEqual( 2: procCnt );

        procNm = getProcNm( procList );

        aEqual( 'PROC1': procNm );

        goToNextProc( procList );
        procNm = getProcNm( procList );

        aEqual( 'PROC2': procNm );

      /end-free
     PtestSeveralProc  e


     PtestProcNmList   b                   Export
     DtestProcNmList   pi

     D procList        ds                  LikeDs(ProcList_t)
     D procNmList      ds                  LikeDs(ProcNmList_t)
     D privateData     s               *   Based(procNmList.handle)

      /free

        // Setup.

        procList = loadProcList( 'SRVPGM2' );

        // Execution.

        procNmList = getProcNmList( procList );

        // Controls.

        cnt_p      = procNmList.cnt;
        getNm_p    = procNmList.getNm;
        goToNext_p = procNmList.goToNext;

        iEqual( 2 : cnt( privateData ) );
        aEqual( 'PROC1' : getNm( privateData ) );
        goToNext( privateData );
        aEqual( 'PROC2' : getNm( privateData ) );

      /end-free
     P                 e


     PtestSrvPgmNotFound...
     P                 b                   Export
     DtestSrvPgmNotFound...
     D                 pi

     D escapeMsgSeen   s               n

      /free

        monitor;
          loadProcList(' ');
          escapeMsgSeen = *off;

        on-error;
          escapeMsgSeen = *on;
        endmon;

        assert( escapeMsgSeen:
                'loadProcList('' '') should raise an escape message.' );

      /end-free
     PtestSrvPgmNotFound...
     P                 e

     PsetUpSuite       b                   Export
     DsetUpSuite       pi
      /free

        runcmd( 'RUCRTTST PGM(QTEMP/SRVPGM1) SRCFILE(RPGUNITF1)' );
        runcmd( 'RUCRTTST PGM(QTEMP/SRVPGM2) SRCFILE(RPGUNITF1)' );

      /end-free
     PsetUpSuite       e


     PtearDownSuite    b                   Export
     DtearDownSuite    pi
      /free

        runcmd( 'DLTSRVPGM SRVPGM(QTEMP/SRVPGM1)' );
        runcmd( 'DLTSRVPGM SRVPGM(QTEMP/SRVPGM2)' );

      /end-free
     PtearDownSuite    e
